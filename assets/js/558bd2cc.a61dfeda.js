"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5169],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>u});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=p(a),u=n,k=c["".concat(l,".").concat(u)]||c[u]||m[u]||o;return a?r.createElement(k,s(s({ref:t},d),{},{components:a})):r.createElement(k,s({ref:t},d))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=c;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var p=2;p<o;p++)s[p]=a[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},1156:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const o={sidebar_position:2,sidebar_label:"Use Disk Volume"},s="Use Disk Volume",i={unversionedId:"apps/disk",id:"apps/disk",title:"Use Disk Volume",description:"HwameiStor provides another type of data volume known as raw disk data volume.",source:"@site/docs/apps/disk.md",sourceDirName:"apps",slug:"/apps/disk",permalink:"/docs/apps/disk",draft:!1,editUrl:"https://github.com/hwameistor/hwameistor/edit/main/docs/docs/apps/disk.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Use Disk Volume"},sidebar:"tutorialSidebar",previous:{title:"Use LVM Volume",permalink:"/docs/apps/lvm"},next:{title:"Use HA Volumes",permalink:"/docs/apps/ha"}},l={},p=[],d={toc:p};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"use-disk-volume"},"Use Disk Volume"),(0,n.kt)("p",null,"HwameiStor provides another type of data volume known as raw disk data volume.\nThis volume is based on the raw disk present on the node and can be directly mounted for container use.\nAs a result, this type of data volume offers more efficient data read and write performance,\nthereby fully unleashing the performance of the disk."),(0,n.kt)("p",null,"The following steps demonstrate how to create and use raw disk data volumes:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Prepare a raw disk storage node"),(0,n.kt)("p",{parentName:"li"},"Make sure that the storage node has available disks. If not, refer to ",(0,n.kt)("a",{parentName:"p",href:"/docs/nodes_and_disks/disk_nodes"},"disk storage node expansion"),"."),(0,n.kt)("p",{parentName:"li"},"Use the following command to check whether there are free disks:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"$ kubectl get localdisknodes\nNAME           FREECAPACITY   TOTALCAPACITY   TOTALDISK   STATUS   AGE\nk8s-worker-2   1073741824     1073741824      1           Ready    19d\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Prepare StorageClass"),(0,n.kt)("p",{parentName:"li"},"Use the following command to create a StorageClass named ",(0,n.kt)("inlineCode",{parentName:"p"},"hwameistor-storage-disk-ssd"),":"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-console"},"$ cat << EOF | kubectl apply -f - \napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:  \n  name: hwameistor-storage-disk-ssd\nparameters:\n  diskType: SSD\nprovisioner: disk.hwameistor.io\nallowVolumeExpansion: false\nreclaimPolicy: Delete\nvolumeBindingMode: WaitForFirstConsumer\nEOF \n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Create a data volume PVC"),(0,n.kt)("p",{parentName:"li"},"Use the following command to create a PVC named ",(0,n.kt)("inlineCode",{parentName:"p"},"hwameistor-disk-volume"),":"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-console"},"$ cat << EOF | kubectl apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: hwameistor-disk-volume\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 1Gi\n  storageClassName: hwameistor-storage-disk-ssd\nEOF\n")))))}m.isMDXComponent=!0}}]);