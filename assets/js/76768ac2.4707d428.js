"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2304],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),i=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=i(e.components);return r.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=i(t),d=a,y=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return t?r.createElement(y,l(l({ref:n},p),{},{components:t})):r.createElement(y,l({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=u;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var i=2;i<o;i++)l[i]=t[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8569:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var r=t(7462),a=(t(7294),t(3905));const o={sidebar_position:10,sidebar_label:"Encrypt Volume"},l="Encrypt Volume",c={unversionedId:"volumes/volume_encrypt",id:"volumes/volume_encrypt",title:"Encrypt Volume",description:"In HwameiStor, you can use LUKS to encrypt local volumes.",source:"@site/docs/volumes/volume_encrypt.md",sourceDirName:"volumes",slug:"/volumes/volume_encrypt",permalink:"/docs/volumes/volume_encrypt",draft:!1,editUrl:"https://github.com/hwameistor/hwameistor/edit/main/docs/docs/volumes/volume_encrypt.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,sidebar_label:"Encrypt Volume"},sidebar:"tutorialSidebar",previous:{title:"Local Cache Volumes",permalink:"/docs/volumes/cache"},next:{title:"Thin Provision Volumes",permalink:"/docs/volumes/volume_thin"}},s={},i=[{value:"1. Create a Secret for encrypting the volume",id:"1-create-a-secret-for-encrypting-the-volume",level:2},{value:"2. Create a StorageClass",id:"2-create-a-storageclass",level:2},{value:"3. Create a PVC and a Deployment",id:"3-create-a-pvc-and-a-deployment",level:2},{value:"4. Check pod status",id:"4-check-pod-status",level:2},{value:"5. Check whether the volume is encrypted",id:"5-check-whether-the-volume-is-encrypted",level:2}],p={toc:i};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"encrypt-volume"},"Encrypt Volume"),(0,a.kt)("p",null,"In HwameiStor, you can use LUKS to encrypt local volumes."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Currently, non-HA encrypted volumes do not support lvmigrate.")),(0,a.kt)("p",null,"Please follow the steps below to create and use encrypted volumes."),(0,a.kt)("h2",{id:"1-create-a-secret-for-encrypting-the-volume"},"1. Create a Secret for encrypting the volume"),(0,a.kt)("p",null,"The details are as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\ndata:\n  key: H4sIAAAAAAAA/+xVP2/bPhDd9SluyGAHUJTgtzFTgPyKLkmDZiwK4kxebNYUSRwp10Xb715IkWzLf5II6eAC3iTe3eO9R/Le1PoJWpEB0AJthcl4J41LxAu0Av67jBlAVIyBdpZpmYgdWmlxQjbWIACBfUlpRlUUEDyn756XRVjm6/WtNMkUrFEo4Gz08OlW3t/c/T/OuLIkn4ylKLIcCkqqWJcUdTRuLOS9DfI63NTml8X5xQ8sbdZSUN49mWmD+c1Pp\n  MOSBETihVF0551Jnot1193HZQYw885zxxSe0EbKAObVhNhRoiijXqMD5MDekgByOnjjUs2aqSnvp0VfsaKehE1vzVdCnlJ6DgqQMpVBbijXUWiAUNVnJ2BOFJrivchSlpRQbvb9zP45r4N7Q2pgiuTSuoJpSksBo0628XXi6n29derJGnNnp7DMMZjDKr6Ah1ozxShbgefG6cFFq3YiBWRMngVcb/Z37zVdjy7Ox+1isKioJJcEnP28+r3nhJ3XdLx8HrweRid4P\n  YRN3UAMqGifMhuxNwN293XFrI/ZhocgBq8PoQ0kWyMp7xIaR3wIc5XQe0Wa/aBXVG8VZhj7z/QDGkv612OlFJEmPf6Lynbza98lybdyu+u4W/D6++5usDw4LWcYZ02w9LqytSldNb+dlnW8fPnkejCtemejx483n2/HPax2upWU2Ci5Pe3hy9dhrnN1cp0jdZ35Qk+Od0yfbOdkOyfbeZftvPbA/zXf+RMAAP//IK/8i+YNAAA=\nkind: Secret\nmetadata:\n  name: hwameistor-encrypt-secret\n  namespace: hwameistor\ntype: Opaque\n")),(0,a.kt)("h2",{id:"2-create-a-storageclass"},"2. Create a StorageClass"),(0,a.kt)("p",null,"Use the following command to create a StorageClass and specify the Secret created above:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: local-storage-hdd-encrypt\nprovisioner: lvm.hwameistor.io\nvolumeBindingMode: WaitForFirstConsumer\nallowVolumeExpansion: true\nreclaimPolicy: Delete\nparameters:\n  encryptSecret: hwameistor/hwameistor-encrypt-secret\n  encryptType: LUKS\n  replicaNumber: "1"\n  poolClass: "HDD"\n  poolType: "REGULAR"\n  volumeKind: "LVM"\n  striped: "true"\n  csi.storage.k8s.io/fstype: "xfs"\n')),(0,a.kt)("h2",{id:"3-create-a-pvc-and-a-deployment"},"3. Create a PVC and a Deployment"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: local-storage-pvc-encrypt\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: local-storage-hdd-encrypt\n  resources:\n    requests:\n      storage: 1Gi\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-local-storage-lvm\n  labels:\n    app: nginx-local-storage-lvm\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx-local-storage-lvm\n  template:\n    metadata:\n      labels:\n        app: nginx-local-storage-lvm\n      name: nginx-local-storage-lvm\n    spec:\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 0\n      containers:\n        - image: nginx:latest\n          imagePullPolicy: IfNotPresent\n          name: nginx\n          ports:\n            - containerPort: 80\n          command:\n            - sh\n            - -xc\n            - |\n              VOL="$( df | grep /usr/share/nginx/html | awk \'{print $1,$NF}\' )"\n              echo "<center><h1>Demo volume: ${VOL}</h1></center>" > /usr/share/nginx/html/index.html\n              nginx -g "daemon off;"\n          volumeMounts:\n            - name: html-root\n              mountPath: /usr/share/nginx/html\n          resources:\n            limits:\n              cpu: "100m"\n              memory: "100Mi"\n      volumes:\n        - name: html-root\n          persistentVolumeClaim:\n            claimName: local-storage-pvc-encrypt\n')),(0,a.kt)("h2",{id:"4-check-pod-status"},"4. Check pod status"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"# kubectl get pod -o wide\nNAME                                      READY   STATUS    RESTARTS   AGE   IP               NODE        NOMINATED NODE   READINESS GATES\nnginx-local-storage-lvm-79886d9dd-44fsg   1/1     Running   0          20m   100.111.156.91   k8s-node1\n")),(0,a.kt)("h2",{id:"5-check-whether-the-volume-is-encrypted"},"5. Check whether the volume is encrypted"),(0,a.kt)("p",null,'You can use the "lsblk" to check whether the TYPE of the volume is crypt.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"# lsblk\nNAME                                                                 MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINT\nsda                                                                    8:0    0   160G  0 disk\n\u251c\u2500sda1                                                                 8:1    0     1G  0 part  /boot\n\u2514\u2500sda2                                                                 8:2    0   159G  0 part\n  \u251c\u2500centos-root                                                      253:0    0    50G  0 lvm   /\n  \u251c\u2500centos-swap                                                      253:1    0   7.9G  0 lvm\n  \u2514\u2500centos-home                                                      253:2    0 101.1G  0 lvm   /home\nsdb                                                                    8:16   0   200G  0 disk\n\u2514\u2500LocalStorage_PoolHDD-pvc--2c097032--690d--4510--99ad--54119b6b650c 253:3    0     1G  0 lvm\n  \u2514\u2500pvc-2c097032-690d-4510-99ad-54119b6b650c-encrypt                 253:4    0  1008M  0 crypt /var/lib/kubelet/pods/4c2b76f3-a84f-4e62-88c8-a71abeb68efd/volumes/kubernetes.io~csi/pvc-2c097032-690d-4510-99ad-54119b6b650c/mount\nsr0                                                                   11:0    1  1024M  0 rom\n")),(0,a.kt)("p",null,'You can use the "blkid" command to check whether the TYPE of the volume is crypto_LUKS:'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},'# blkid /dev/LocalStorage_PoolHDD/pvc-2c097032-690d-4510-99ad-54119b6b650c\n/dev/LocalStorage_PoolHDD/pvc-2c097032-690d-4510-99ad-54119b6b650c: UUID="a1910adf-f1dc-45a4-aeb3-6a8cf045bb9d" TYPE="crypto_LUKS"\n')))}m.isMDXComponent=!0}}]);